// Simple Turbojet 
AUTHOR = "Prashanth";
MODELNAME = "SimpleTurbojet";

// Set Thermodynamic Package
#ifndef THERMO
	#define THERMO GasTbl
#endif
if ("$THERMO" == "CEA") {setThermoPackage( "CEA", "thermo.smaller", "trans.inp", "Air", "H2O", "H2");}
else {setThermoPackage("$THERMO");}

// Input information
InFileStream input_data {
    filename = "../arch.dat";
}

// Option Variables
Option switchDes {
	description = "Determines if the model is in design or off-design mode";
	IOstatus = "input";
	rewritableValues = FALSE;
	trigger = FALSE;
	allowedValues = {"DESIGN","OFFDESIGN"};
}

// Engine Assembly
Assembly Assembly Eng
{
    // Basic Schematic
    string schematic = 
    "
    0 -> InletStart -> 1 -> Inlet -> 2 -> CmpH -> 3 -> BurnPri -> 4 -> TrbH ->5 -> NozPri ->6 FlowEnd
                                                  Shaft ------- Shaft
                                                         fuel               
    ";
    
    // Air Reservoir
    Element Ambient Amb {
        switchMode = "ALDTMN";
        alt_in     = input_data.getReal();
        dTs_in     = input_data.getReal();
        MN_in      = input_data.getReal();
    }

    // Free Stream Definition
    Element InletStart InletStart{
        AmbientName = "Amb";
        W_in        = input_data.getReal() "kg/sec";
    }

    // Inlet
    Element Inlet Inlet {
        PqP_in     = input_data.getReal();
    }

    // Compressor
    Element Compressor CmpH {
        #include "HPCAnsysJun26.map";
        PRdes       = input_data.getReal();
        effDes      = input_data.getReal();
        Fl_I.MNdes  = input_data.getReal();
    }

    // Fuel Injector
    Element FuelStart FusEng {
        LHV_in = input_data.getReal() "Btu/lbm"; //1MJ/kg = 429.923 BTU/lbm
        Wfuel  = input_data.getReal() "kg/sec";
    }

    // Combustor
    Element Burner BrnPri {
        setOption("switchBurn", "WFUEL");
        dPqP_dmd   = input_data.getReal();
        effBase    = input_data.getReal();
        Fl_I.MNdes = input_data.getReal();
    }

    // Turbine
    Element Turbine TrbH {
        #include "hptCFM56.map";
        PRbase      = input_data.getReal();
        effDes      = input_data.getReal();
        Fl_I.MNdes  = input_data.getReal();
    }

    // Nozzle
    Element Nozzle NozPri {
        PsExhName  = "Amb.Ps";
        switchType = "CONIC";
        Fl_I.MNdes = input_data.getReal();
        dPqP       = input_data.getReal();
        if (THERMPACKAGE == "CEA" ) {
            switchFrozen = "EQUIL";
        }
    }

    // Exhaust
    Element FlowEnd FePri {
    }

    // Shaft
    Element Shaft ShH {
        ShaftInputPort MeCmpH, MeTrbH;
        Nmech = input_data.getReal();
        HPX   = input_data.getReal() "hp";
    }

    // Performance Evalution
    Element EngPerf Perf {
        real Qin,dKE,etaTherm;
        void postexecute(){
            Qin = FusEng.LHV_in*FusEng.Wfuel*1055.06; //[J/sec or watt]
            dKE = (0.5*NozPri.Fl_O.W*NozPri.Fl_O.V**2.0 - 0.5*Inlet.Fl_I.W*Inlet.Fl_I.V**2)*0.04214; //[J/sec or watt]
            etaTherm = dKE/Qin; //0 to 1
        }
    }

    // Linkages
    linkPorts( "InletStart.Fl_O", "Inlet.Fl_I" , "F1" );
    linkPorts( "Inlet.Fl_O"     , "CmpH.Fl_I"  , "F2" );
    linkPorts( "CmpH.Fl_O"      , "BrnPri.Fl_I", "F3a");
    linkPorts( "FusEng.Fu_O"    , "BrnPri.Fu_I", "F3f");
    linkPorts( "BrnPri.Fl_O"    , "TrbH.Fl_I"  , "F4" );
    linkPorts( "TrbH.Fl_O"      , "NozPri.Fl_I", "F5" );
    linkPorts( "NozPri.Fl_O"    , "FePri.Fl_I" , "F6" );
    linkPorts( "CmpH.Sh_O"      , "ShH.MeCmpH" , "F3s" );
    linkPorts( "TrbH.Sh_O"      , "ShH.MeTrbH" , "F4s" );

    // Print out current engine setup
    void std_print(){
        string elements[] = list("Element", FALSE);
        cout<<"Engine model used \""<<MODELNAME<<"\""<<endl<<endl;
        cout<<strFmt1D("List of elements:","%s, ",elements, elements.entries(),elements.entries()/2)<<endl;
        cout<<schematic<<endl;
    }
}

input_data.close();