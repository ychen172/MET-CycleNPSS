void FlowStationProps(string fsname){
    FlowStation fstemp;
    fstemp.copyFlowRemote(fsname);
    cout << "-------------------------------------------------------------------" << endl;
    cout << strFmt("|               Flow station properties: %8s %4s            |", THERMPACKAGE, fsname) << endl;
    cout << "-------------------------------------------------------------------" << endl;
    cout << "|           |        Imperial           |          Metric         |" << endl;
    cout << "------------|---------------------------|--------------------------" << endl;
    cout << strFmt(" fs.W       | %12.5f %12s |%12.3f %12s|", fstemp.W       , fstemp.W.units      , fstemp.W       * getUnitsFactor(fstemp.W.units      , "kg/sec"  ) , "kg/sec"   ) << endl;
    cout << strFmt(" fs.Pt      | %12.5f %12s |%12.3f %12s|", fstemp.Pt      , fstemp.Pt.units     , fstemp.Pt      * getUnitsFactor(fstemp.Pt.units     , "kPa"     ) , "kPa"      ) << endl;
    cout << strFmt(" fs.Tt      | %12.5f %12s |%12.3f %12s|", fstemp.Tt      , fstemp.Tt.units     , fstemp.Tt      * getUnitsFactor("dR"                , "dK"      ) , "K"        ) << endl;
    cout << strFmt(" fs.ht      | %12.5f %12s |%12.3f %12s|", fstemp.ht      , fstemp.ht.units     , fstemp.ht      * getUnitsFactor(fstemp.ht.units     , "J/kg"    ) , "J/kg"     ) << endl;
    cout << strFmt(" fs.entropy | %12.5f %12s |%12.3f %12s|", fstemp.entropy , fstemp.entropy.units, fstemp.entropy * getUnitsFactor(fstemp.entropy.units, "J/(kg*K)") , "J/(kg*K)" ) << endl;
    cout << strFmt(" fs.s       | %12.5f %12s |%12.3f %12s|", fstemp.s       , fstemp.s.units      , fstemp.s       * getUnitsFactor(fstemp.s.units      , "J/(kg*K)") , "J/(kg*K)" ) << endl;
    cout << strFmt(" fs.rhot    | %12.5f %12s |%12.3f %12s|", fstemp.rhot    , fstemp.rhot.units   , fstemp.rhot    * getUnitsFactor(fstemp.rhot.units   , "kg/m3"   ) , "kg/m3"    ) << endl;
    cout << strFmt(" fs.Rt      | %12.5f %12s |%12.3f %12s|", fstemp.Rt      , fstemp.Rt.units     , fstemp.Rt      * getUnitsFactor(fstemp.Rt.units     , "J/(kg*K)") , "J/(kg*K)" ) << endl;
    cout << strFmt(" fs.gamt    | %12.5f %12s |%12.3f %12s|", fstemp.gamt    , fstemp.gamt.units   , fstemp.gamt    * getUnitsFactor(fstemp.gamt.units   , "none"    ) , "none"     ) << endl;
    cout << strFmt(" fs.Cpt     | %12.5f %12s |%12.3f %12s|", fstemp.Cpt     , fstemp.Cpt.units    , fstemp.Cpt     * getUnitsFactor(fstemp.Cpt.units    , "J/(kg*K)") , "J/(kg*K)" ) << endl;
    cout << strFmt(" fs.FAR     | %12.5f %12s |%12.3f %12s|", fs.FAR  , fs.FAR.units, fs.FAR  , "kg/kg") << endl;

    if(THERMPACKAGE == "Janaf"){

        cout << strFmt(" fs.MW      | %12.5f %12s |%12.3f %12s|", fstemp.MW     , fstemp.MW.units    , fstemp.MW  , fstemp.MW.units) << endl;
        cout << strFmt(" fs.FARst   | %12.5f %12s |%12.3f %12s|", fstemp.FARst  , fstemp.FARst.units, fstemp.FARst  , "kg/kg") << endl;
        cout << endl << fstemp.totalCompAll()  << endl;
    }
    cout << endl;
}

void FuelStationProps(string fusname){

    FuelStation fustemp;
    fustemp.copyFlow(fusname);
    cout << "------------------------" << endl;
    cout << "Fuel station properties:" << endl;
    cout << "------------------------" << endl;
    cout << strFmt(" fus.LHV      | %12.5f %12s |%12.3f %12s|", fustemp.LHV      , fustemp.LHV.units     , fustemp.LHV      * getUnitsFactor(fustemp.LHV.units     , "J/kg")/1e6, "MJ/kg") << endl;
    cout << strFmt(" fus.TrefFuel | %12.5f %12s |%12.3f %12s|", fustemp.TrefFuel , fustemp.TrefFuel.units, fustemp.TrefFuel * getUnitsFactor("dR"                  , "dK"  )    , "K"    ) << endl;
    cout << strFmt(" fus.hRefFuel | %12.5f %12s |%12.3f %12s|", fustemp.hRefFuel , fustemp.hRefFuel.units, fustemp.hRefFuel * getUnitsFactor(fustemp.hRefFuel.units, "J/kg")    , "J/kg" ) << endl;
    cout << strFmt(" fus.hFuel    | %12.5f %12s |%12.3f %12s|", fustemp.hFuel    , fustemp.hFuel.units   , fustemp.hFuel    * getUnitsFactor(fustemp.hFuel.units   , "J/kg")    , "J/kg" ) << endl;
    cout << strFmt(" fus.HCRatio  | %12.5f %12s |%12.3f %12s|", fustemp.HCRatio  , fustemp.HCRatio.units , fustemp.HCRatio                    , "") << endl;
    cout << strFmt(" fus.CHRatio  | %12.5f %12s |%12.3f %12s|", fustemp.CHRatio  , fustemp.CHRatio.units , fustemp.CHRatio                    , "") << endl;
    if(THERMPACKAGE == "GasTbl"){
        cout << strFmt(" fus.FARst    : %.5e %s", fustemp.FARst    , fustemp.FARst.units   ) << endl;
        // Store the FARst
        real FARst = fustemp.FARst;
    }
    if(THERMPACKAGE == "Janaf"){
        cout << " fus.compAll    : \n"+ fustemp.compAll()   << endl;
    }
    cout << endl;
}