//******************************************************************************
//*   © Copyright 2003.  The U.S. Government, as Represented by the Administrator
//*     of the National Aeronautics and Space Administration (NASA).
//*   © Copyright 2008, 2009, 2010, 2011, 2012.     The Ohio Aerospace Institute, on behalf of the NPSS(TM)
//*     Consortium.  All rights reserved.  Includes content licensed from the 
//*     U.S. Government, National Aeronautics and Space Administration under 
//*     United States Copyright Registration Numbers  V3503D364 and V3482D344.
//*******************************************************************************

//******************************************************************************
//*  NPSSTM software and related documentation is export controlled
//*  with an Export Control Classification Number(ECCN) of 9D991, controlled for
//*  Anti-Terrorism reasons, under U.S. Export Administration Regulations 15 CFR
//*  730-774. It may not be transferred to a country checked under anti-terrorism
//*  on the Commerce Country Chart structure or to foreign nationals of those
//*  countries in the U.S. or abroad without first obtaining a license from the
//*  Bureau of Industry and Security, United States Department of Commerce. 
//*  Violations are punishable by fine, imprisonment, or both.
//*******************************************************************************

// ******************************************************************
// This data Map is generated from an existing NEPP map.
// ******************************************************************

//  ---------------------------------------------------------------
//  |    Fan outer diameter Compressor Maps
//  ---------------------------------------------------------------
//  |    Declaration of a new Subelement instance called S_map
//  |    that is of the type CompressorRlineMap
//  ---------------------------------------------------------------

Subelement CompressorRlineMap S_map {

	// Do NOT change these values!  They are specific to these maps.
	alphaMapDes = 0.0; // Unscaled map design point vane angle.
	NcMapDes = 0.99; // Unscaled map design point corrected speed. Max eff point at 100% speed	
	RlineMapDes = 2.2; // Unscaled map design point Rline. Max eff point at 100% speed
	RlineStall= 1.0; // Rline at stall
	
	//  ----------------------------------------------------------------------
	//  |    Declare a table (or function) named TB_Wc(real ALPHA, real SPED, real R)
	//  |    To satisfy the TB_Wc socket requirement.
	//  ---------------------------------------------------------------------- 

	// Fan OD corrected flow VS. stator angle, fraction of design speed, and R-line
	// Note: this map has ALPHA = 0 and ALPHA = 1, but both submaps are identical
    Table TB_Wc(real ALPHA, real SPED, real R) {
		 
		 ALPHA = 0.0 {
			SPED =  0.3  {
				R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				FLOW = { 121.797, 150.895, 179.422, 207.275, 234.359, 260.582, 285.861, 310.12 ,
			 333.291, 355.315, 369.552 }
			}
			SPED =  0.4  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				FLOW = { 194.867, 227.417, 258.872, 289.101, 317.981, 345.407, 371.284, 395.535,
			 418.097, 438.921, 457.973 }
			}
			SPED =  0.5  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				FLOW = { 265.64 , 302.32 , 337.109, 369.834, 400.351, 428.543, 454.32 , 477.621,
			 498.412, 516.684, 532.453 }
			}
			SPED =  0.6  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				FLOW = { 330.65 , 373.304, 412.75 , 448.759, 481.163, 509.851, 534.771, 555.926,
			 573.366, 587.188, 597.526 }
			}
			SPED =  0.7  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				FLOW = { 380.373, 433.991, 481.896, 523.736, 559.314, 588.58 , 611.621, 628.642,
			 639.948, 645.923, 647.172 }
			}
			SPED =  0.75  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				FLOW = { 408.374, 467.955, 520.262, 564.886, 601.649, 630.583, 651.91 , 666.008,
			 673.384, 674.865, 674.865 }
			}
			SPED =  0.8  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				FLOW = { 432.494, 499.118, 556.491, 604.137, 641.921, 670.01 , 688.838, 699.045,
			 701.536, 701.536, 701.536 }
			}
			SPED =  0.85  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				FLOW = { 470.522, 540.248, 599.144, 646.786, 683.165, 708.637, 723.856, 729.705,
			 729.841, 729.841, 729.841 }
			}
			SPED =  0.9  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				FLOW = { 527.146, 594.695, 650.583, 694.581, 726.881, 748.023, 758.831, 760.796,
			 760.796, 760.796, 760.796 }
			}
			SPED =  0.95  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				FLOW = { 593.025, 653.568, 702.7  , 740.438, 767.14 , 783.445, 790.213, 790.533,
			 790.533, 790.533, 790.533 }
			}
			SPED =  1.0  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				FLOW = { 643.809, 697.196, 739.568, 771.126, 792.35 , 803.95 , 806.892, 806.892,
			 806.892, 806.892, 806.892 }
			}
			SPED =  1.05  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				FLOW = { 684.12 , 729.283, 764.846, 791.078, 808.441, 817.554, 819.416, 819.416,
			 819.416, 819.416, 819.416 }
			}
			SPED =  1.1  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				FLOW = { 723.881, 760.55 , 789.192, 810.094, 823.667, 830.421, 831.443, 831.443,
			 831.443, 831.443, 831.443 }
			}
			SPED =  1.15  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				FLOW = { 762.811, 790.037, 811.271, 826.753, 836.786, 841.724, 842.41 , 842.41 ,
			 842.41 , 842.41 , 842.41  }
			}
		} // end ALPHA = 0.0
	    ALPHA = 1.0 {
			SPED =  0.3  {
				R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				FLOW = { 121.797, 150.895, 179.422, 207.275, 234.359, 260.582, 285.861, 310.12 ,
			 333.291, 355.315, 369.552 }
			}
			SPED =  0.4  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				FLOW = { 194.867, 227.417, 258.872, 289.101, 317.981, 345.407, 371.284, 395.535,
			 418.097, 438.921, 457.973 }
			}
			SPED =  0.5  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				FLOW = { 265.64 , 302.32 , 337.109, 369.834, 400.351, 428.543, 454.32 , 477.621,
			 498.412, 516.684, 532.453 }
			}
			SPED =  0.6  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				FLOW = { 330.65 , 373.304, 412.75 , 448.759, 481.163, 509.851, 534.771, 555.926,
			 573.366, 587.188, 597.526 }
			}
			SPED =  0.7  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				FLOW = { 380.373, 433.991, 481.896, 523.736, 559.314, 588.58 , 611.621, 628.642,
			 639.948, 645.923, 647.172 }
			}
			SPED =  0.75  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				FLOW = { 408.374, 467.955, 520.262, 564.886, 601.649, 630.583, 651.91 , 666.008,
			 673.384, 674.865, 674.865 }
			}
			SPED =  0.8  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				FLOW = { 432.494, 499.118, 556.491, 604.137, 641.921, 670.01 , 688.838, 699.045,
			 701.536, 701.536, 701.536 }
			}
			SPED =  0.85  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				FLOW = { 470.522, 540.248, 599.144, 646.786, 683.165, 708.637, 723.856, 729.705,
			 729.841, 729.841, 729.841 }
			}
			SPED =  0.9  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				FLOW = { 527.146, 594.695, 650.583, 694.581, 726.881, 748.023, 758.831, 760.796,
			 760.796, 760.796, 760.796 }
			}
			SPED =  0.95  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				FLOW = { 593.025, 653.568, 702.7  , 740.438, 767.14 , 783.445, 790.213, 790.533,
			 790.533, 790.533, 790.533 }
			}
			SPED =  1.0  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				FLOW = { 643.809, 697.196, 739.568, 771.126, 792.35 , 803.95 , 806.892, 806.892,
			 806.892, 806.892, 806.892 }
			}
			SPED =  1.05  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				FLOW = { 684.12 , 729.283, 764.846, 791.078, 808.441, 817.554, 819.416, 819.416,
			 819.416, 819.416, 819.416 }
			}
			SPED =  1.1  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				FLOW = { 723.881, 760.55 , 789.192, 810.094, 823.667, 830.421, 831.443, 831.443,
			 831.443, 831.443, 831.443 }
			}
			SPED =  1.15  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				FLOW = { 762.811, 790.037, 811.271, 826.753, 836.786, 841.724, 842.41 , 842.41 ,
			 842.41 , 842.41 , 842.41  }
			}
		} // end ALPHA = 1.0

		ALPHA.interp = "linear" ;
		ALPHA.extrap = "linear" ;

		SPED.interp = "lagrange3" ;
		SPED.extrap = "linear" ;

		R.interp = "lagrange3" ;
		R.extrap = "linear" ;

		extrapIsError = 0;
		printExtrap = 0;
		
    }  //end TB_Wc

	//  ----------------------------------------------------------------------
	//  |    Declare a table (or function) named TB_eff(real ALPHA, real SPED, real R)
	//  |    To satisfy the TB_eff socket requirement.
	//  ---------------------------------------------------------------------- 

	// Fan OD efficiency VS. vane angle, fraction of design speed, and R-line  
	// Note: this map has ALPHA = 0 and ALPHA = 1, but both submaps are identical
    Table TB_eff(real ALPHA, real SPED, real R) {
		ALPHA = 0.0 {
			SPED =  0.3  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 EFF  = { 0.6931, 0.7672, 0.8306, 0.8802, 0.9112, 0.9167, 0.8887, 0.8138, 0.6634,
			 0.3791, 0.     }
			}
			SPED =  0.4  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 EFF  = { 0.7418, 0.8033, 0.8552, 0.8953, 0.9199, 0.9241, 0.903 , 0.8489, 0.7461,
			 0.5672, 0.2591 }
			}
			SPED =  0.5  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 EFF  = { 0.7517, 0.8112, 0.8613, 0.8997, 0.9233, 0.9277, 0.9089, 0.8607, 0.7712,
			 0.6201, 0.372  }
			}
			SPED =  0.6  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 EFF  = { 0.7322, 0.7985, 0.8543, 0.8973, 0.924 , 0.9297, 0.9103, 0.8596, 0.765 ,
			 0.6063, 0.3482 }
			}
			SPED =  0.7  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 EFF  = { 0.6641, 0.7519, 0.8264, 0.8844, 0.9213, 0.9308, 0.9071, 0.8412, 0.7151,
			 0.4988, 0.1381 }
			}
			SPED =  0.75  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 EFF  = { 0.6357, 0.7325, 0.8148, 0.8789, 0.9199, 0.931 , 0.9059, 0.835 , 0.6992,
			 0.4665, 0.08   }
			}
			SPED =  0.8  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 EFF  = { 0.6109, 0.7155, 0.8044, 0.8738, 0.9183, 0.9307, 0.9044, 0.8294, 0.6858,
			 0.4403, 0.0347 }
			}
			SPED =  0.85  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 EFF  = { 0.6261, 0.7262, 0.8108, 0.8763, 0.9179, 0.9294, 0.9052, 0.8376, 0.7105,
			 0.4991, 0.1625 }
			}
			SPED =  0.9  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 EFF  = { 0.6875, 0.7679, 0.8348, 0.8857, 0.9173, 0.9253, 0.9067, 0.8573, 0.7685,
			 0.6279, 0.4175 }
			}
			SPED =  0.95  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 EFF  = { 0.7557, 0.8118, 0.8576, 0.8916, 0.9119, 0.9161, 0.903 , 0.871 , 0.8162,
			 0.7337, 0.6169 }
			}
			SPED =  1.0  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 EFF  = { 0.7947, 0.8341, 0.8656, 0.8885, 0.9014, 0.903 , 0.8926, 0.8695, 0.8315,
			 0.7761, 0.6998 }
			}
			SPED =  1.05  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 EFF  = { 0.8153, 0.8449, 0.8684, 0.8851, 0.894 , 0.8942, 0.8853, 0.8669, 0.8376,
			 0.7958, 0.7392 }
			}
			SPED =  1.1  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 EFF  = { 0.8289, 0.8503, 0.8669, 0.8783, 0.8838, 0.8829, 0.8753, 0.8608, 0.8386,
			 0.8076, 0.7666 }
			}
			SPED =  1.15  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 EFF  = { 0.8385, 0.8532, 0.8643, 0.8715, 0.8745, 0.8728, 0.8664, 0.8552, 0.8387,
			 0.8163, 0.7873 }
			}
		} // end ALPHA = 0.0
		ALPHA = 1.0 {
			SPED =  0.3  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 EFF  = { 0.6931, 0.7672, 0.8306, 0.8802, 0.9112, 0.9167, 0.8887, 0.8138, 0.6634,
			 0.3791, 0.     }
			}
			SPED =  0.4  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 EFF  = { 0.7418, 0.8033, 0.8552, 0.8953, 0.9199, 0.9241, 0.903 , 0.8489, 0.7461,
			 0.5672, 0.2591 }
			}
			SPED =  0.5  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 EFF  = { 0.7517, 0.8112, 0.8613, 0.8997, 0.9233, 0.9277, 0.9089, 0.8607, 0.7712,
			 0.6201, 0.372  }
			}
			SPED =  0.6  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 EFF  = { 0.7322, 0.7985, 0.8543, 0.8973, 0.924 , 0.9297, 0.9103, 0.8596, 0.765 ,
			 0.6063, 0.3482 }
			}
			SPED =  0.7  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 EFF  = { 0.6641, 0.7519, 0.8264, 0.8844, 0.9213, 0.9308, 0.9071, 0.8412, 0.7151,
			 0.4988, 0.1381 }
			}
			SPED =  0.75  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 EFF  = { 0.6357, 0.7325, 0.8148, 0.8789, 0.9199, 0.931 , 0.9059, 0.835 , 0.6992,
			 0.4665, 0.08   }
			}
			SPED =  0.8  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 EFF  = { 0.6109, 0.7155, 0.8044, 0.8738, 0.9183, 0.9307, 0.9044, 0.8294, 0.6858,
			 0.4403, 0.0347 }
			}
			SPED =  0.85  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 EFF  = { 0.6261, 0.7262, 0.8108, 0.8763, 0.9179, 0.9294, 0.9052, 0.8376, 0.7105,
			 0.4991, 0.1625 }
			}
			SPED =  0.9  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 EFF  = { 0.6875, 0.7679, 0.8348, 0.8857, 0.9173, 0.9253, 0.9067, 0.8573, 0.7685,
			 0.6279, 0.4175 }
			}
			SPED =  0.95  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 EFF  = { 0.7557, 0.8118, 0.8576, 0.8916, 0.9119, 0.9161, 0.903 , 0.871 , 0.8162,
			 0.7337, 0.6169 }
			}
			SPED =  1.0  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 EFF  = { 0.7947, 0.8341, 0.8656, 0.8885, 0.9014, 0.903 , 0.8926, 0.8695, 0.8315,
			 0.7761, 0.6998 }
			}
			SPED =  1.05  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 EFF  = { 0.8153, 0.8449, 0.8684, 0.8851, 0.894 , 0.8942, 0.8853, 0.8669, 0.8376,
			 0.7958, 0.7392 }
			}
			SPED =  1.1  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 EFF  = { 0.8289, 0.8503, 0.8669, 0.8783, 0.8838, 0.8829, 0.8753, 0.8608, 0.8386,
			 0.8076, 0.7666 }
			}
			SPED =  1.15  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 EFF  = { 0.8385, 0.8532, 0.8643, 0.8715, 0.8745, 0.8728, 0.8664, 0.8552, 0.8387,
			 0.8163, 0.7873 }
			}
		} // end ALPHA = 1.0


		ALPHA.interp = "linear" ;
		ALPHA.extrap = "linear" ;

		SPED.interp = "lagrange3" ;
		SPED.extrap = "linear" ;

		R.interp = "lagrange3" ;
		R.extrap = "linear" ;

		extrapIsError = 0;
		printExtrap = 0;
		
    }  //end TB_eff
	
	//  ----------------------------------------------------------------------
	//  |    Declare a table (or function) named TB_PR(real ALPHA, real SPED, real R)
	//  |    To satisfy the TB_PR socket requirement.
	//  ---------------------------------------------------------------------- 

	// Fan OD total-to-total pressure ratio VS. vane angle, fraction of design speed, and R-line 
	// Note: this map has ALPHA = 0 and ALPHA = 1, but both submaps are identical	
    Table TB_PR(real ALPHA, real SPED, real R) {
	
		ALPHA = 0.0 {
			SPED =  0.3  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 PR  = { 1.0546, 1.0558, 1.0553, 1.0532, 1.0494, 1.044 , 1.0372, 1.029 , 1.0196,
			 1.0089, 1.     }
			}
			SPED =  0.4  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 PR  = { 1.1002, 1.101 , 1.0994, 1.0955, 1.0892, 1.0807, 1.0702, 1.0578, 1.0436,
			 1.0278, 1.0102 }
			}
			SPED =  0.5  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 PR  = { 1.1593, 1.1606, 1.1584, 1.1527, 1.1434, 1.1307, 1.1149, 1.0964, 1.0753,
			 1.0517, 1.0258 }
			}
			SPED =  0.6  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 PR  = { 1.2313, 1.2363, 1.2353, 1.2283, 1.2154, 1.1968, 1.173 , 1.1449, 1.1125,
			 1.0764, 1.0366 }
			}
			SPED =  0.7  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 PR  = { 1.3042, 1.3232, 1.3306, 1.3261, 1.31  , 1.2825, 1.245 , 1.1992, 1.1457,
			 1.0854, 1.0193 }
			}
			SPED =  0.75  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 PR  = { 1.3479, 1.3775, 1.3917, 1.3901, 1.3728, 1.3402, 1.2944, 1.2376, 1.1708,
			 1.0956, 1.0133 }
			}
			SPED =  0.8  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 PR  = { 1.3935, 1.4356, 1.4581, 1.4602, 1.442 , 1.404 , 1.3488, 1.2797, 1.1982,
			 1.1065, 1.0068 }
			}
			SPED =  0.85  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 PR  = { 1.4654, 1.5127, 1.5381, 1.5409, 1.5209, 1.4789, 1.4178, 1.3413, 1.2513,
			 1.1501, 1.0406 }
			}
			SPED =  0.9  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 PR  = { 1.583 , 1.6221, 1.6408, 1.6386, 1.6155, 1.5723, 1.5116, 1.4367, 1.3492,
			 1.2512, 1.1448 }
			}
			SPED =  0.95  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 PR  = { 1.7258, 1.7494, 1.7565, 1.7469, 1.7208, 1.6787, 1.6229, 1.5555, 1.4778,
			 1.3912, 1.2969 }
			}
			SPED =  1.0  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 PR  = { 1.8381, 1.8472, 1.8432, 1.826 , 1.796 , 1.7537, 1.7006, 1.6386, 1.5684,
			 1.491 , 1.4073 }
			}
			SPED =  1.05  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 PR  = { 1.9316, 1.9312, 1.9197, 1.8973, 1.8642, 1.8209, 1.7687, 1.7091, 1.6427,
			 1.5702, 1.4923 }
			}
			SPED =  1.1  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 PR  = { 2.0237, 2.0149, 1.997 , 1.9704, 1.9352, 1.8918, 1.8414, 1.785 , 1.7231,
			 1.6562, 1.5848 }
			}
			SPED =  1.15  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 PR  = { 2.1043, 2.0885, 2.0659, 2.0366, 2.0008, 1.9588, 1.9114, 1.8595, 1.8033,
			 1.7433, 1.6797 }
			}
		} // end ALPHA = 0.0
		ALPHA = 1.0{
			SPED =  0.3  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 PR  = { 1.0546, 1.0558, 1.0553, 1.0532, 1.0494, 1.044 , 1.0372, 1.029 , 1.0196,
			 1.0089, 1.     }
			}
			SPED =  0.4  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 PR  = { 1.1002, 1.101 , 1.0994, 1.0955, 1.0892, 1.0807, 1.0702, 1.0578, 1.0436,
			 1.0278, 1.0102 }
			}
			SPED =  0.5  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 PR  = { 1.1593, 1.1606, 1.1584, 1.1527, 1.1434, 1.1307, 1.1149, 1.0964, 1.0753,
			 1.0517, 1.0258 }
			}
			SPED =  0.6  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 PR  = { 1.2313, 1.2363, 1.2353, 1.2283, 1.2154, 1.1968, 1.173 , 1.1449, 1.1125,
			 1.0764, 1.0366 }
			}
			SPED =  0.7  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 PR  = { 1.3042, 1.3232, 1.3306, 1.3261, 1.31  , 1.2825, 1.245 , 1.1992, 1.1457,
			 1.0854, 1.0193 }
			}
			SPED =  0.75  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 PR  = { 1.3479, 1.3775, 1.3917, 1.3901, 1.3728, 1.3402, 1.2944, 1.2376, 1.1708,
			 1.0956, 1.0133 }
			}
			SPED =  0.8  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 PR  = { 1.3935, 1.4356, 1.4581, 1.4602, 1.442 , 1.404 , 1.3488, 1.2797, 1.1982,
			 1.1065, 1.0068 }
			}
			SPED =  0.85  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 PR  = { 1.4654, 1.5127, 1.5381, 1.5409, 1.5209, 1.4789, 1.4178, 1.3413, 1.2513,
			 1.1501, 1.0406 }
			}
			SPED =  0.9  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 PR  = { 1.583 , 1.6221, 1.6408, 1.6386, 1.6155, 1.5723, 1.5116, 1.4367, 1.3492,
			 1.2512, 1.1448 }
			}
			SPED =  0.95  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 PR  = { 1.7258, 1.7494, 1.7565, 1.7469, 1.7208, 1.6787, 1.6229, 1.5555, 1.4778,
			 1.3912, 1.2969 }
			}
			SPED =  1.0  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 PR  = { 1.8381, 1.8472, 1.8432, 1.826 , 1.796 , 1.7537, 1.7006, 1.6386, 1.5684,
			 1.491 , 1.4073 }
			}
			SPED =  1.05  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 PR  = { 1.9316, 1.9312, 1.9197, 1.8973, 1.8642, 1.8209, 1.7687, 1.7091, 1.6427,
			 1.5702, 1.4923 }
			}
			SPED =  1.1  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 PR  = { 2.0237, 2.0149, 1.997 , 1.9704, 1.9352, 1.8918, 1.8414, 1.785 , 1.7231,
			 1.6562, 1.5848 }
			}
			SPED =  1.15  {
				 R = { 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4, 2.6, 2.8, 3.  }
				 PR  = { 2.1043, 2.0885, 2.0659, 2.0366, 2.0008, 1.9588, 1.9114, 1.8595, 1.8033,
			 1.7433, 1.6797 }
			}
		} // end ALPHA = 1.0

		ALPHA.interp = "linear" ;
		ALPHA.extrap = "linear" ;

		SPED.interp = "lagrange3" ;
		SPED.extrap = "linear" ;

		R.interp = "lagrange3" ;
		R.extrap = "linear" ;

		extrapIsError = 0;
		printExtrap = 0;
	  
    }  //end TB_PR
	
}  //end S_map scope (CompressorRlineMap subelement)
